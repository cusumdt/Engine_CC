#include "Shape.h"

using namespace Graficos1;

Shape::Shape()
{
	VertexArrayID = 0;
	VertexBuffer = 0;
	shader = 0;
}

Shape::Shape(int newx, int newy)
{
	moveTo(newx, newy);
	VertexArrayID = 0;
	VertexBuffer = 0;
	shader = 0;
}

Shape::Shape(float newx, float newy)
{
	moveTo(newx, newy);
	VertexArrayID = 0;
	VertexBuffer = 0;
	shader = 0;
}

Shape::Shape(Vector2 v)
{
	vec.x = v.x;
	vec.y = v.y;
	VertexArrayID = 0;
	VertexBuffer = 0;
	shader = 0;
}

float Shape::getX()
{ 
	return vec.x;
}
float Shape::getY()
{ 
	return vec.y;
}
void Shape::setX(float newx)
{ 
	vec.x = newx;
}
void Shape::setY(float newy)
{ 
	vec.y = newy;
}

void Shape::moveTo(float newx, float newy)
{
	setX(newx);
	setY(newy);
}

void Shape::set(Color triangleColor) 
{

}

void Shape::draw()
{

}

void Shape::rotate(float speed, glm::vec3 axis)
{
	model = glm::rotate(model, glm::radians(speed), axis);
<<<<<<< HEAD
=======
}

void Shape::translate(glm::vec3 pos)
{
	model = glm::translate(model, pos);
}

void Graficos1::Shape::scale(glm::vec3 factor)
{
	model = glm::scale(model, factor);
>>>>>>> d1bc1c006e301f2936cabcd22cbc742ab1319170
}

GLuint Shape::GetShader()
{
	return shader;
}