#ifndef SHAPE_H
#define SHAPE_H
#define DLLEXPORT __declspec(dllexport)

#include "Vector2.h"
#include "Renderer.h"

namespace Graficos1
{
	class DLLEXPORT Shape
	{
	private:

	protected:
		Vector2 vec;
		GLuint VertexArrayID;
		GLuint VertexBuffer;
		unsigned int shader;
		unsigned int texture1;
		unsigned int texture2;
		GLuint uniModel;
		GLuint uniView;
		GLuint uniProj;
		glm::mat4 model;
		glm::mat4 view;
		glm::mat4 proj;
		
	public:
		Shape();
		Shape(int newx, int newy);
		Shape(float newx, float newy);
		Shape(Vector2 v);
		float getX();
		float getY();
		GLuint GetShader();
		void setX(float newx);
		void setY(float newy);
		void moveTo(float newx, float newy);
		virtual void set(Color shapeColor);
		virtual void draw();
		void rotate(float speed, glm::vec3 axis);
<<<<<<< HEAD
=======
		void translate(glm::vec3 pos);
		void scale(glm::vec3 factor);
>>>>>>> d1bc1c006e301f2936cabcd22cbc742ab1319170
		Renderer currentRenderer;
	};
}

#endif //SHAPE_H