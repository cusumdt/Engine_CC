#include "Game.h"

using namespace Graficos1;
using namespace Graficos2;

Game::Game()
{
	colliding = false;
	lastPos = vec3(0, 0, 0);
	timer = 0;
	isSprite2 = false;
	lastPos2 = vec3(0, 0, 0);
}

Game::~Game()
{

}

void Game::InitGame()
{
	Color red;
	red.SetColor(255, 0, 0, 255);
	SetBackgroundColors(Colors.Black);
	Init(1024,720, "3D World bruh");

	background.set(Colors.White, vec3(1024.0f, 720.0f, 1.0f));
	background.SetMaterial1("res/textures/dios.jpg", GL_RGB, true, GL_NEAREST);
	background.setPosition(vec3(900, -10, 0)); // 512 360
	background.Rotate(vec3(0, 270, 0));

	
	
	light.SetLight(false);
	light.SetLightPos(vec3(10.f, -5.0f, 0.f));

	//// FBX TEXTURE CONFIG MANUAL
	skybox.set("res/model/skybox/SkyPano_SerpentineValley.fbx", Colors.White, false, light);
	skybox.Scale(vec3(3, 3, 3));
	skybox.setPosition(vec3(180, -0.3f, 0));
	skybox.SetTexture(0, "texture_diffuse", "res/textures/models/skybox/Serpentine_Valley_8k.jpg");

	sword.set("res/model/excalibur/excalibur.fbx", Colors.White, false, light);
	sword.Scale(vec3(15, 15, 15));
	sword.setPosition(vec3(40,-9.9f,5));
	sword.Rotate(vec3(10, -90, 0));
	sword.SetTexture(0, "texture_diffuse", "res/textures/models/excalibur/excalibur_Excalibur_BaseColor.jpg");
	//// OBJ TEXTURE CONFIG AUTOMATIC (With mtl file)
	nanosuit.set("res/model/nanosuit.obj", Colors.White, false,light);
	nanosuit.Scale(vec3(20, 20, 20));
	nanosuit.setPosition(vec3(30,-10,0));
	nanosuit.Rotate(vec3(0, 29, 0));
	//nanosuit.Rotate(vec3(0, 270, 0));

	newText.set("res/fonts/Silver.ttf");

	movementSpeed = 250.0f;

	input.SetMouseCaptureMode(true);

	GameLoop();
}

void Game::Update(TimeStep dt)
{
	timer += dt;
	if (input.GetInput(GLFW_KEY_D))
	{
		camera.SetPosition(camera.GetPosition() + glm::normalize(glm::cross(camera.GetFront(), camera.GetUp())) * movementSpeed * (float)dt);
	}

	if (input.GetInput(GLFW_KEY_A))
	{

		camera.SetPosition(camera.GetPosition() - glm::normalize(glm::cross(camera.GetFront(),camera.GetUp())) * movementSpeed * (float)dt);
	}

	if (input.GetInput(GLFW_KEY_W))
	{

		camera.SetPosition(camera.GetPosition() + (camera.GetFront() * movementSpeed * (float)dt));
	}

	if (input.GetInput(GLFW_KEY_S))
	{
		camera.SetPosition(camera.GetPosition() - (camera.GetFront() * movementSpeed * (float)dt));
	}

	if (input.GetInput(GLFW_KEY_LEFT))
	{
		nanosuit.Rotate(vec3(0, 270 * dt, 0));
	}
	if (input.GetInput(GLFW_KEY_RIGHT))
	{
		nanosuit.Rotate(vec3(0, -270 * dt, 0));
	}
	if (input.GetInput(GLFW_KEY_UP))
	{
		nanosuit.MoveForward2Axis(90 * dt);
	}
	if (input.GetInput(GLFW_KEY_DOWN))
	{
	}

	if (input.GetInput(GLFW_KEY_ESCAPE))
	{
		CloseApplication();
	}

	

	camera.SetFront(input.GetDirection());
	camera.SetPosition(camera.GetPosition());

	//background.draw();
<<<<<<< HEAD
	skybox.draw(light);
	sword.draw(light);
	nanosuit.draw(light);

	newText.RenderText("Engine by Franco Vega & Mariano Martinez", 200.0f, 25.0f, 1.0f, glm::vec3(1.0, 0.2f, 0.2f));
=======
	skybox.draw();
	sword.draw();
	nanosuit.draw();
>>>>>>> 50d750ab2370c0b4ca9dffbaa0bc11d3fe1c4615
	
}

void Game::DeInitGame()
{
}
